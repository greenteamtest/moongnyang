<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.BookingDAO">

	<!-- 카테고리별 장소 목록 -->
	<select id="slcPlace_List" parameterType="Object" resultType="com.health.dto.HealthPlaceVo">
		select idx, field, place, phone_num, address, open_time, introduce, dips_cont, pet_kind
		<choose>
			<when test="_parameter != null and _parameter instanceof Integer">
				from view_place
				where idx = #{value}
			</when>
			<otherwise>
				,sum_rating , reviewers, avg
				from tot_view
				order by 8 desc
			</otherwise>
		</choose>
	</select>


	<!-- 유저 찜 목록 select -->
	<select id="slcUser_dips" parameterType="String" resultType="com.health.dto.HealthUserDipsVo">
		select dips_place_list_id from user_dips where user_email = #{value}
	</select>


	<!-- 업체당 user review -->
	<select id="slcUser_Review" parameterType="int" resultType="com.health.dto.HealthReviewVo">
		select place_list_id, user_email, contents, write_date, write_time,like_count, manager_comment, my_rating
		from user_review
		where place_list_id = #{value}
		order by 1 , 4 desc, 5 desc
	</select>



	<!-- 업체당 user review -->
	<select id="chkOverlapReview" parameterType="review" resultType="com.health.dto.HealthReviewVo">
		select user_review_idx from user_review where place_list_id = #{place_list_id} and user_email = #{user_email}
	</select>



	<!-- insert user review -->
	<insert id="istReview" parameterType="review">
		insert into user_review (user_review_idx, user_email, place_list_id, contents, my_rating, write_date, write_time)
		values (seq_user_review.nextval, #{user_email}, #{place_list_id}, #{contents}, #{my_rating}, to_char(sysdate , 'yy.MM.dd'), to_char(sysdate, 'hh24:mi'))
	</insert>


	<!-- select avg rating per place -->
	<select id="slcPlaceAvgRating" parameterType="int" resultType="double">
		select round(NVL(sum(my_rating),0)/ count(idx),2) avg
		from view_place V
		left join user_review R
		on V.idx= R.place_list_id
		where idx = #{value}
		group by idx
	</select>


	<!-- revise user review -->
	<update id="rvsReview" parameterType="review">
		update user_review
		set contents = #{contents} ,my_rating = #{my_rating},
		write_date =to_char(sysdate , 'yy.MM.dd') , write_time =to_char(sysdate, 'hh24:mi')
		where user_email = #{user_email} and place_list_id = #{place_list_id}
	</update>



	<!-- delete user review -->
	<delete id="dltReview" parameterType="review">
		delete from user_review where user_email = #{user_email} and place_list_id = #{place_list_id}
	</delete>



	<!-- update place dips -->
	<update id="udPlaceDips" parameterType="Hashmap">
		update place_info set dips_cont =
		<choose>
			<when test="state eq 'positive'.toString()">
				dips_cont +1
			</when>
			<otherwise>
				dips_cont -1
			</otherwise>
		</choose>
		where place_list_id = #{idx}
	</update>


	<!-- get placedips -->
	<select id="getPlaceDips" parameterType="Hashmap" resultType="int">
		select dips_cont from place_info where place_list_id = #{idx}
	</select>


	<!-- control user dips -->
	<select id="controlUserDips" parameterType="Hashmap" resultType="int">
		<choose>
			<when test="state eq 'positive'.toString()">
				insert into user_dips
				values (SEQ_USER_DIPS.nextval, #{email}, #{idx})
			</when>
			<otherwise>
				delete from user_dips
				where user_email = #{email}
				and dips_place_list_id = #{idx}
			</otherwise>
		</choose>
	</select>


	<!-- select PlaceList For ArrayType -->
	<select id="slcPlaceListForArrayType" parameterType="String" resultType="com.health.dto.HealthPlaceVo">
		select idx
		<choose>
			<when test="_parameter eq 'popul'.toString()">
				from view_place
				order by dips_cont desc
			</when>
			<when test="_parameter eq 'reviews'.toString()">
				,count(idx)
				from view_place V
				left join user_review R
				on V.idx= R.place_list_id
				group by idx, place
				order by 2 desc
			</when>
			<otherwise>
				, round(NVL(sum(my_rating),0)/ count(idx),2) avg
				from view_place V
				left join user_review R
				on V.idx= R.place_list_id
				group by idx
				order by 2 desc
			</otherwise>
		</choose>
	</select>


	<!--select idx for searching keyword -->
	<select id="slcIdxForSearchingKeyword" parameterType="Hashmap" resultType="com.health.dto.HealthPlaceVo">
		select idx from view_place where
		<choose>
			<when test="field eq 'place'.toString()">
				place
			</when>
			<when test="field eq 'address'.toString()">
				address
			</when>
			<when test="field eq 'introduce'.toString()">
				introduce
			</when>
			<otherwise>
				pet_kind
			</otherwise>
		</choose>
		like '%'||#{keyword}||'%'
	</select>



</mapper>


