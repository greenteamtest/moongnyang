<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- <mapper namespace="dao.StaffDAO"> -->
<mapper namespace="com.media.dao.mediaDAO">
	<!-- <select id="load_medialist" parameterType="media" -->
	<!-- resultType="com.media.dto.mediaVO"> -->
	<!-- select * from media_upload order by num_media desc -->
	<!-- </select> -->
	<select id="load_mypost_media" parameterType="String"
		resultType="com.media.dto.mediaVO">
		select * from media_comment where comment_email_media =
		#{value}
		and read_check =1 order by num_media desc
	</select>
	<select id="load_comment" parameterType="int"
		resultType="com.media.dto.mediaVO">
		SELECT num_media, num_comment, user_email_media,
		comment_content,
		read_check, user_info.user_nick frOM media_comment
		LEFT OUTER JOIN
		user_info ON
		media_comment.user_email_media =
		user_info.user_email
		where num_media=#{value} order by
		num_comment
		desc
	</select>
	<!-- 상세보기눌렀을때 -->
	<select id="select_media" parameterType="int"
		resultType="com.media.dto.mediaVO">
		SELECT * FROM media_upload WHERE num_media =#{value}
	</select>
	<select id="search_media" parameterType="String"
		resultType="com.media.dto.mediaVO">
		SELECT * FROM media_upload WHERE hashtag_media LIKE
		'%'||#{search_value}||'%' order by num_media desc
	</select>
	<select id="load_medialist" parameterType="media"
		resultType="com.media.dto.mediaVO">
		SELECT
		num_media,hashtag_media,user_email_media,mediaurl,content_media,like_media,user_info.user_nick
		FROM media_upload LEFT OUTER JOIN user_info ON
		media_upload.user_email_media = user_info.user_email order by
		num_media desc
	</select>
	<insert id="upload_media" parameterType="media">
		insert into media_upload
		values(media_upload_seq.nextval,
		#{title_media},#{hashtag_media},#{user_email_media},#{user_nick_media},
		#{mediaurl},#{content_media},0,0)
	</insert>
	<insert id="add_comment" parameterType="media">
		insert into media_comment
		values(#{num_media},media_comment_seq.nextval,
		#{user_email_media},#{comment_user_email},#{comment_content},1)
	</insert>
	<insert id="click_like" parameterType="media">
		merge into likecnt_media
		using dual on (user_email=
		#{user_email_media}
		and
		num_media=#{num_media})
		when not matched then
		insert
		values(#{num_media},
		#{user_email_media})
	</insert>
	<update id="update_like" parameterType="media">
		update MEDIA_UPLOAD set
		like_media = like_media + 1
		where num_media=#{num_media}
	</update>
	<update id="check_comment" parameterType="media">
		update media_comment
		set read_check =0 where num_media =#{num_media} and
		comment_email_media
		=#{comment_email_media}
	</update>
</mapper>